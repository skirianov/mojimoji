else if (document.activeElement.getAttribute('contenteditable')) {
        // for non-specified url websites
        let target = document.activeElement;
        const suggestions = document.createElement('div');

        function getLastWordEntered() {
          let el = document.activeElement;
          let selection = getSelection();
          let range = selection.getRangeAt(0);
          let line = range.endContainer.nodeValue || '';
          let cursor = selection.focusOffset;
          if (!line) {
            let childNodes = selection.anchorNode.parentNode.childNodes;
            for (let i = 0; i < childNodes.length; i++) {
              if (childNodes[i] == selection.anchorNode) { break; }
              if (childNodes[i].outerHTML) {
                if (childNodes[i].innerText) { line += ' ' + childNodes[i].innerText.trim(); }
              } else if (childNodes[i].nodeType == 3) {
                if (childNodes[i].textContent) { line += ' ' + childNodes[i].textContent.trim(); }
              }
            }
            line = line.trim();
            cursor = line.length;
          }
          let words = line.replace(/\W+/gm, ' ').substring(0, cursor).trim().split(' ');
          let lastWord = words[words.length - 1];
          return lastWord.trim();
        }

        function insertTextAtCaretInput(input, text) {
          removeSuggestions();

          let start = input.selectionStart;
          let end = input.selectionEnd;
          let index = input.value.lastIndexOf(lastWord);
          input.value = input.value.slice(0, index) + input.value.slice(index).replace(lastWord, text);
          show = false;
        }

        function insertTextAtCaretDiv(text) {
          removeSuggestions();

          let selection = window.getSelection();
          let range = selection.getRangeAt(0);
          range.insertNode(document.createTextNode(text));
          selection.removeAllRanges();
          show = false;
        }

        if (e.keyCode >= 65 && e.keyCode <= 90) {
          filteredEmoji = [];
          show = false;
          removeSuggestions();
        } else if (e.keyCode === 13 || e.keyCode === 32) {
          filteredEmoji = [];
          show = false;
          removeSuggestions();
          lastWord = getLastWordEntered();
          filteredEmoji = findEmoji(emoji);
          if (lastWord) {
            show = true;
          }
        }

        function insertEditable() {
          filteredEmoji.map(each => {
            let emojiToAdd = document.createElement('div');
            emojiToAdd.className = 'emoji';
            emojiToAdd.innerText = each;
            emojiToAdd.addEventListener('click', () => insertTextAtCaretDiv(each))
            suggestions.appendChild(emojiToAdd);
          });
        }

        if (show) {
          insertEditable();
          suggestions.className = 'emoji-container';
          suggestions.style.position = 'absolute';
          suggestions.style.left = URL.includes('medium') ? `${x - 300}px`:`${x + 10}px`;
          suggestions.style.top = `${y}px`;
          let selection = window.getSelection();
          let range = selection.getRangeAt(0);
          range.insertNode(suggestions);
          selection.removeAllRanges();
        }
         
      } 